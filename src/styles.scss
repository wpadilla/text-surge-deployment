@import "~bootstrap/scss/bootstrap";

@import 'styles/colors-variables';
@import './styles/color-classes.scss';

@import 'styles/text-variables';
@import './styles/text-classes.scss';
// overwritten primeng tab styles
@import './styles/primeng-tab.scss';
// overwritten primeng steps styles
@import './styles/primeng-steps.scss';
// overwritten primeng steps styles
@import './styles/primeng-table.scss';
// errors styles
@import './styles/errors-handling.scss';
// overwriting emojis styles
@import './styles/emoji.scss';
// overwriting primeng accordon styles
@import './styles/primeng-accordon.scss';
// overwriting primeng accordon styles
@import './styles/primeng-tree.scss';
@import "~primeicons/primeicons.css";
@import "~primeng/resources/themes/saga-blue/theme.css";
@import "~primeng/resources/primeng.min.css";
@import '~@ctrl/ngx-emoji-mart/picker';

* {
  transition: all .3s ease;
}
html, body {
    background-color:$color-gray-7;
    height:100%;
    margin:0;
    padding:0;
}
.header-1 {
    font-size:$font-size-8;
    font-weight:$font-weight-4;
    padding-bottom:1rem;
}
.label-1 {
    color:$color-gray-1;
    font-size:$font-size-2;
}
.label-2 {
    color:$color-gray-1;
    font-size:$font-size-3;
}
.link-1 {
    color:$color-blue-5;
    cursor:pointer;
    font-size:$font-size-2;
    font-weight:$font-weight-6;
}
.link-1:hover,
.link-2:hover,
.link-3:hover {
    text-decoration:underline;
}
input.text {
    border-width:0 0 1px 0;
    color:$color-gray-1;
    font-family:"Lexend", sans-serif;
    font-size:$font-size-2;
    margin:0;
    padding:0.5rem;
    width:100%;
}
input[type=checkbox] {
    display:inline-block;
    position:relative;
    transform: scale(1.7);
}

.p-field {
    padding:1.5rem 0;
    position:relative;

    .error-wrapper {
        bottom:0;
        position:absolute;

        .error {
            color:$color-red-2;
            font-size:$font-size-2;
        }
    }
}
.p-field.flex-full {
    display:flex;
    justify-content:space-between;
}
.disable-box-shadow {
  box-shadow: unset !important;
}
.p-autocomplete-input {
  border: none;
  border-bottom: 1px solid $color-gray-1;
  border-radius: 0;
}

.p-autocomplete-input:focus {
  @extend .disable-box-shadow;
}

// overwritting all primeng inputs
input.p-inputtext {
  border: none;
  border-bottom: 1px solid $color-gray-2;
  border-radius: 0;
}


@keyframes fadeIn {
  from {
    opacity: 0;
  } to {
  opacity: 1;
      }
}

.p-button-icon-only {
  border-radius: 0px;
  float: left;
  background-color: transparent;
  color: $color-gray-1;
  border: none;
  border-bottom: 1px solid $color-gray-2;
  transition: unset !important;
}

.p-button-icon-only:hover {
  background-color: transparent !important;
  color: $color-gray-1 !important;
  border-color: $color-gray-2;
}

.p-autocomplete {
  width: 100%;
}

.p-inputtext:focus {
  box-shadow: unset !important;
}

.p-inputtext:focus ~ .p-button-icon-only {
  border-color: #2196F3;
  color: #2196F3;
}

.p-checkbox-box.p-highlight {
  background-color: $color-blue-5 !important;
}

.cursor-pointer {
  cursor: pointer;
}

.p-avatar img {
  object-fit: cover;
}

.border-rounded {
  border-radius: 100rem;
}

label {
  color:$color-gray-1 !important;
  font-size:$font-size-3 !important;
}

.p-dialog {
  .p-dialog-header {
    border-top-right-radius: 15px;
    border-top-left-radius: 15px;
  }
  .p-dialog-footer {
    border-bottom-right-radius: 15px;
    border-bottom-left-radius: 15px;
  }
}

// separate all items ones of the others with dots something like item -------------- item2 etc...
.dot-separated-items {
  display:flex;
  justify-content: space-between;
  *  {
    display: flex;
    position: relative;
    align-items: center;
    white-space: nowrap;
    width: 100%;
    &::after {
      content: "";
      width: 100%;
      border-bottom: 2px dotted $color-gray-2;
      margin: 0 10px 0 10px;
    }

    &:last-of-type {
      display: flex;
      justify-content: flex-end;
      width: auto;
      &::after {
        display: none;
      }
    }
  }
}

.dark-hover:hover {
  filter: brightness(.7);
}

.light-hover:hover {
  filter: brightness(1.3);
}

.high-light-hover:hover {
  filter: brightness(2);
}
